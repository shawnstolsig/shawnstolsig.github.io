{"version":3,"sources":["components/Navbar.js","assets/content/aboutme.js","components/AboutMe.js","components/ProjectCard.js","assets/content/projects.js","components/ProjectGrid.js","assets/content/timeline.js","components/Timeline.js","components/Hero.js","assets/config.js","components/ContactForm.js","components/App.js","index.js","assets/resume/resume.pdf","assets/images/me.jpeg","assets/images/shiftManagr.png","assets/videos/shiftManagr.mp4","assets/images/eftLootTrainer.png","assets/videos/eftLootTrainer.mp4","assets/images/chirp.png","assets/videos/chirp.mp4","assets/images/portfolio.png","assets/images/bg_cropped1.9_resized_milkyway.jpg"],"names":["useStyles","makeStyles","theme","title","flexGrow","fontFamily","hoverColor","color","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","style","borderBottomStyle","borderImageSlice","borderWidth","borderImageSource","borderImageWidth","Navbar","classes","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","className","Link","href","IconButton","aria-label","GitHub","LinkedIn","resume","AttachFile","aboutMe","paragraphs","portrait","borderRadius","maxWidth","stackGrid","backgroundColor","marginTop","spacing","root","AboutMe","Card","CardContent","Grid","container","justify","alignItems","gridContainer","item","xs","align","md","map","para","key","gutterBottom","Box","src","alt","fontSize","height","smallCardMedia","largeCardMediaRoot","margin","largeCardMedia","maxHeight","width","modal","display","justifyContent","paper","palette","background","padding","chip","gridContainerMargin","closeButton","position","right","top","grey","linkButton","dialogTitle","ProjectCard","imageUrl","caption","description","repoUrl","videoUrl","stack","demoUrl","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","onClick","CardActionArea","CardMedia","component","image","Dialog","fullWidth","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","DialogTitle","disableTypography","DialogContent","playsInline","autoPlay","loop","controls","lg","Divider","tech","Chip","label","size","Button","projects","shiftManagrPreview","shiftManagrVideo","eftLootTrainerPreview","eftLootTrainerVideo","chirpPreview","chirpVideo","portfolioPreview","ProjectGrid","project","timelineInfo","type","dates","organization","location","styles","work","education","start","companyLogo","Timeline","contentStyle","date","iconStyle","icon","Work","School","Star","heroContent","heroButtons","Hero","Container","paragraph","emailjs_username","textField","messageField","submitButton","ContactForm","name","setName","email","setEmail","phone","setPhone","company","setCompany","message","setMessage","emailjs","init","userId","TextField","value","helperText","onChange","e","target","multiline","rows","placeholder","params","user_name","user_email","user_phone","user_company","send","then","alert","disabled","App","muiTheme","createMuiTheme","800","900","overrides","MuiCssBaseline","body","content","left","zIndex","croppedStarImage","WebkitBackgroundSize","OBackgroundSize","MozBackgroundSize","backgroundSize","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.796f6bcb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    CssBaseline,\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    useScrollTrigger,\r\n    IconButton,\r\n    Link\r\n} from '@material-ui/core'\r\nimport {\r\n    GitHub,\r\n    LinkedIn,\r\n    AttachFile\r\n} from '@material-ui/icons'\r\nimport resume from '../assets/resume/resume.pdf'\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n        fontFamily: '\\'Baumans\\', cursive'\r\n    },\r\n    hoverColor: {\r\n        color: '#084177',\r\n    },\r\n}));\r\n\r\n// this function adds elevation to the children (in this case an AppBar) when scrolled\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n    });\r\n\r\n    // set higher elevation and a solid background color when scroll triggered\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n        color: trigger ? 'inherit' : 'transparent',\r\n        style: trigger ? { \r\n            borderBottomStyle: 'solid',\r\n            borderImageSlice: 1,\r\n            borderWidth: '4px',\r\n            borderImageSource: 'linear-gradient(to left, #537394, #003469',\r\n            borderImageWidth: '0px 0px 4px 0px'\r\n         } : null\r\n    });\r\n}\r\n\r\n// ensure correct props\r\nElevationScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ElevationScroll {...props}>\r\n                <AppBar >\r\n                    <Toolbar>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.title}\r\n                        >Shawn Stolsig \r\n                        </Typography>\r\n                        <Link\r\n                            href=\"https://github.com/shawnstolsig\"\r\n                            color=\"inherit\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"GitHub\"\r\n                                title=\"GitHub\">\r\n                                <GitHub />\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link\r\n                            href=\"https://www.linkedin.com/in/shawnstolsig/\"\r\n                            color=\"inherit\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"LinkedIn\"\r\n                                title=\"LinkedIn\">\r\n                                <LinkedIn />\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link\r\n                            href={resume}\r\n                            color=\"inherit\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Resume\"\r\n                                title=\"Resume\">\r\n                                <AttachFile />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <Toolbar />            {/* why is this toolbar here? */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","const aboutMe = {\r\n    paragraphs: [\r\n        `I started my coding journey when I was 9 years old. I made a friend who was programming his own pong game and I was very intrigued. Admittedly, I didn't make it very far through the Visual Basic book that my parents bought me shortly thereafter. But a passion for computers stuck with me; I eventually graduated from the US Naval Academy with a degree in Computer Science ('with merit', to boot!). More recently, I've become proficient in web development languages and frameworks through a combination of self-study and a full-stack coding school (PDX Code Guild in Portland, OR). I've always loved the challenge of solving problems through code and I'm excited to pivot my career from operations management to chase the dream of becoming a software developer.`,\r\n        `I'm originally from Seattle but I currently live in Las Vegas with my girlfriend, our three cats, and one lazy (but sweet!) dog. I've picked up a bunch of hobbies over the years; along with many of the usual suspects (music festivals, traveling, computer games, long walks on the beach, etc), I'm passionate about playing/recording music, adventure motorcycle riding, taking photos, tinkering with Arduino and baking sourdough bread.`,\r\n    ],\r\n}\r\n\r\nexport default aboutMe","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    FaHtml5,\r\n    FaCss3,\r\n    FaJs,\r\n    FaPython,\r\n    FaVuejs,\r\n    FaReact,\r\n} from 'react-icons/fa'\r\n\r\nimport { DiDjango } from 'react-icons/di'\r\n\r\nimport portrait from '../assets/images/me.jpeg'\r\nimport aboutMe from '../assets/content/aboutme'\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    portrait: {\r\n        borderRadius: '30%',\r\n        maxWidth: \"300px\",\r\n    },\r\n    stackGrid: {\r\n        backgroundColor: 'primary',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    root: {\r\n        backgroundColor: 'rgba(1,1,1,.5)'\r\n    }\r\n}));\r\n\r\nexport default function AboutMe(){\r\n    const classes = useStyles()\r\n    const {paragraphs} = aboutMe\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.gridContainer}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" align=\"center\">About Me</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <br/>\r\n                        {paragraphs.map((para) => (\r\n                            <Typography \r\n                                variant=\"body1\" \r\n                                key={para}\r\n                                gutterBottom\r\n                                >{para}\r\n                            </Typography>\r\n                        ))}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <Box align=\"center\">\r\n                            <img \r\n                                className={classes.portrait} \r\n                                src={portrait} \r\n                                alt=\"Me\" \r\n                                align=\"center\"/>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container className={classes.stackGrid}  justify='space-between'>\r\n                            <Grid item xs={3} md={1} title=\"HTML\">\r\n                                <Box align=\"center\">\r\n                                    <FaHtml5 style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"CSS\">\r\n                                <Box align=\"center\">\r\n                                    <FaCss3 style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"JavaScript\">\r\n                                <Box align=\"center\">\r\n                                    <FaJs style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"Python\">\r\n                                <Box align=\"center\">\r\n                                    <FaPython style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"React.js\">\r\n                                <Box align=\"center\">\r\n                                    <FaReact style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"Vue.js\">\r\n                                <Box align=\"center\">\r\n                                    <FaVuejs style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={3} md={1} title=\"Django\">\r\n                                <Box align=\"center\">\r\n                                    <DiDjango style={{fontSize: '40'}}/>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Chip,\r\n    Button,\r\n    Box,\r\n    Typography,\r\n    Backdrop,\r\n    Fade,\r\n    Grid,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Divider,\r\n    IconButton,\r\n    useMediaQuery\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 290,\r\n        height: 463,\r\n        backgroundColor: 'rgba(1,1,1,.5)'\r\n    },\r\n    smallCardMedia: {\r\n        height: 290,\r\n    },\r\n    largeCardMediaRoot: {\r\n        elevation: 0,\r\n        margin: theme.spacing(2),\r\n    },\r\n    largeCardMedia: {\r\n        maxHeight: '70vh',\r\n        maxWidth: '90vw',\r\n        width: 'auto',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    gridContainerMargin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(7),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    linkButton: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    dialogTitle: {\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nexport default function ProjectCard({ title, imageUrl, caption, description, repoUrl, videoUrl, stack, demoUrl }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {/* this card is rendered by Project Grid */}\r\n            <Card className={classes.root} onClick={handleOpen}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        className={classes.smallCardMedia}\r\n                        image={imageUrl}\r\n                        title={title}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {caption}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            {/* this modal pops out to show project details when \"learn more\" is clicked */}\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth='lg'\r\n                fullScreen={fullScreen}\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <DialogTitle disableTypography className={classes.dialogTitle}>\r\n                            <Typography \r\n                                variant=\"h4\" \r\n                                align=\"center\"\r\n                                \r\n                                >{title} \r\n                            </Typography>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                className={classes.closeButton}\r\n                                onClick={handleClose}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container>\r\n                                {videoUrl &&\r\n                                    <Grid item xs={12}>\r\n                                        <Card \r\n                                            elevation={0} \r\n                                            className={classes.largeCardMediaRoot}\r\n                                            align=\"center\"\r\n                                            >\r\n                                            <CardMedia\r\n                                                playsInline\r\n                                                autoPlay\r\n                                                loop\r\n                                                controls\r\n                                                component=\"video\"\r\n                                                src={videoUrl}\r\n                                                title={title}\r\n                                                className={classes.largeCardMedia}\r\n                                            />\r\n                                        </Card>\r\n                                    </Grid> }\r\n                                <Grid item xs={12}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} lg={8}>\r\n                                            <Typography\r\n                                                variant=\"h6\"\r\n                                                align=\"center\"\r\n                                            >Description\r\n                                            </Typography>\r\n                                            <Divider variant=\"middle\" />\r\n                                            <Box className={classes.gridContainerMargin}>\r\n                                                {description.map((para) => (\r\n                                                    <Typography\r\n                                                        key={para}\r\n                                                        variant=\"body1\"\r\n                                                        gutterBottom\r\n                                                    >{para}\r\n                                                    </Typography>\r\n                                                ))}\r\n                                            </Box>\r\n\r\n                                        </Grid>\r\n                                        <Grid item xs={12} lg={4}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography\r\n                                                        variant=\"h6\"\r\n                                                        align=\"center\"\r\n                                                    >Stack\r\n                                                    </Typography>\r\n                                                    <Divider variant=\"middle\" />\r\n                                                    <Box className={classes.gridContainerMargin}>\r\n                                                        {stack.map((tech) => (\r\n                                                            <Chip\r\n                                                                key={tech}\r\n                                                                label={tech}\r\n                                                                size=\"small\"\r\n                                                                className={classes.chip}\r\n                                                                variant=\"outlined\"\r\n                                                            />\r\n                                                        ))}\r\n                                                    </Box>\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography\r\n                                                        variant=\"h6\"\r\n                                                        align=\"center\"\r\n                                                    >Links\r\n                                                    </Typography>\r\n                                                    <Divider variant=\"middle\" />\r\n                                                    <Box className={classes.gridContainerMargin}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            href={repoUrl}\r\n                                                            className={classes.linkButton}\r\n                                                            >Repo\r\n                                                        </Button>\r\n                                                        {demoUrl && \r\n                                                            <Button\r\n                                                                variant=\"contained\"\r\n                                                                color=\"primary\"\r\n                                                                href={demoUrl}\r\n                                                                className={classes.linkButton}\r\n                                                                >Hosted\r\n                                                            </Button>\r\n                                                        }\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </div>\r\n                </Fade>\r\n            </Dialog>\r\n        </React.Fragment >\r\n    );\r\n}","// media imports\r\nimport shiftManagrPreview from '../images/shiftManagr.png'\r\nimport shiftManagrVideo from '../videos/shiftManagr.mp4'\r\nimport eftLootTrainerPreview from '../images/eftLootTrainer.png'\r\nimport eftLootTrainerVideo from '../videos/eftLootTrainer.mp4'\r\nimport chirpPreview from '../images/chirp.png'\r\nimport chirpVideo from '../videos/chirp.mp4'\r\nimport portfolioPreview from '../images/portfolio.png'\r\n\r\n// data for project cards\r\nconst projects = [\r\n    {\r\n        title: \"shiftMANAGR\",\r\n        imageUrl: shiftManagrPreview,\r\n        videoUrl: shiftManagrVideo,\r\n        caption: \"A work force management app that enables supervisors to create a graphical representation of their workspace and assign employees to workstations.\",\r\n        description: [\r\n            \"The idea behind shiftMANAGR was to create a tool to help a shift leader manage and communicate workstation assignments for their employees. While I specifically designed it as a tool for an Amazon operations leader, shiftMANAGR would create value in any industry where employees are frequently rotated between different roles and/or workstations: hospitals, manufacturing, security, and construction are a few examples.\",\r\n            \"I created shiftMANAGR as my capstone project while at PDX Code Guild.\" \r\n        ],\r\n        repoUrl: \"https://github.com/shawnstolsig/pdx_code_guild_capstone\",\r\n        demoUrl: null,\r\n        stack: ['HTML', 'CSS', 'JavaScript', 'Python', 'Vue.js', 'Vuex', 'Vuetify', 'Django', 'Django REST Framework', 'JSON Web Token Authentication', 'SQLite'],\r\n    },\r\n    {\r\n        title: \"EFT: Loot Trainer\",\r\n        imageUrl: eftLootTrainerPreview,\r\n        videoUrl: eftLootTrainerVideo,\r\n        caption: \"A mini-game to train looting proficiency in Escape from Tarkov (a computer game).\",\r\n        description: [\r\n            \"This app is a mini-game I created for Escape from Tarkov (EFT) computer game. I created a UI similiar to that experienced in-game, where players must visually identify items and choose the most valuable items to loot. Since the value of each item changes dynamically through EFT's in-game flea market, I leveraged a community-created API from Tarkov Market (https://tarkov-market.com/) to pull rouble values for each of the games 2000+ items. I created my own backend/database to store these values as the API is rate-limited.\",\r\n        ],\r\n        repoUrl: \"https://github.com/shawnstolsig/tarkov_loot_simulator\",\r\n        demoUrl: null,\r\n        stack: ['HTML', 'CSS', 'JavaScript', 'Python', 'Vue.js', 'Vuetify', 'Django', 'Django REST Framework', 'SQLite'],\r\n    },\r\n    {\r\n        title: \"Chirp\",\r\n        imageUrl: chirpPreview,\r\n        videoUrl: chirpVideo,\r\n        caption: \"A Twitter clone I developed while completing the React curriculum at tylermcginnis.com. \",\r\n        description: [\r\n            \"This is a basic Twitter clone that I created while learning React, React Hooks, React Router, and Redux. This app uses some starter code from www.tylermcginnis.com to simulate a backend; the UI is designed to provide a smooth user experience with asynchronous data fetching. \",\r\n        ],\r\n        repoUrl: \"https://github.com/shawnstolsig/tyler_mcginnis_react_course/tree/master/react-redux/chirp\",\r\n        demoUrl: null,\r\n        stack: ['HTML', 'CSS', 'JavaScript', 'React.js', 'Redux'],\r\n    },\r\n    {\r\n        title: \"Personal Website\",\r\n        imageUrl: portfolioPreview,\r\n        videoUrl: null,\r\n        caption: \"This website!\",\r\n        description: [\r\n            \"A personal website for my portfolio and information about myself.  You're already on it!\",\r\n        ],\r\n        repoUrl: \"https://github.com/shawnstolsig/personal_site_development\",\r\n        demoUrl: \"https://www.shawnstolsig.com\",\r\n        stack: ['HTML', 'CSS', 'JavaScript', 'React.js', 'Material-UI'],\r\n    },\r\n\r\n]\r\n\r\nexport default projects","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport ProjectCard from './ProjectCard'\r\nimport projects from '../assets/content/projects'\r\n\r\nexport default function ProjectGrid() {\r\n\r\n    return (\r\n        <Grid container justify=\"center\" spacing={2}>\r\n\r\n            {/* Page title */}\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h3\" align=\"center\">\r\n                    Projects\r\n                </Typography>\r\n            </Grid>\r\n\r\n            {/* Project cards */}\r\n            {projects.map((project) => (\r\n                <Grid key={project.title} item>\r\n                    <ProjectCard \r\n                        {...project}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n            \r\n        </Grid>\r\n    );\r\n}\r\n","const timelineInfo = [\r\n    {\r\n        type: 'education',\r\n        dates: 'Oct 2019 - Feb 2020',\r\n        organization: 'PDX Code Guild',\r\n        location: 'Portland, OR',\r\n        position: 'Student',\r\n        description: 'A 14-week full-time, full-stack web design course.  Gained proficiency in HTML, CSS, JavaScript, and Python, using Vue.js and Django frameworks.',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C4E0BAQH7S3s2fGX2Lg/company-logo_100_100/0?e=1597881600&v=beta&t=RRL3Q209Ye1CSLI21RBqLN9rC4ejPV0GLIxWPIlr9RQ',\r\n    },\r\n    {\r\n        type: 'work',\r\n        dates: 'July 2017 - Aug 2019',\r\n        organization: 'Amazon',\r\n        location: 'Las Vegas, NV',\r\n        position: 'Operations Manager',\r\n        description: 'I was an Operations Manager at two different Amazon fulfillment centers in Las Vegas. After working in reverse logistics for the first year and a half, I transferred to a traditional fulfillment center operation where I was responsible for all daytime outbound operations and led a team of 215 hourly associates and five salaried managers.',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C560BAQFdwVGpSOHmgw/company-logo_100_100/0?e=1597881600&v=beta&t=VgxqHoaKf0WbttfhtUbg_2kfQNlrw70wxkDbX8HAVEs',\r\n    },\r\n    {\r\n        type: 'education',\r\n        dates: 'June 2015 - June 2017',\r\n        organization: 'UCLA: Anderson',\r\n        location: 'Los Angeles, CA',\r\n        position: 'MBA Candidate',\r\n        description: 'I got my master of business administration degree after enrolling in the UCLA Anderson School of Management full-time MBA program. I followed the school\\'s technology management track, which culminated in an 18-student, self-managed software development capstone project (we implemented a new student club portal using ASP.NET).',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C560BAQEie8vD0XYgWg/company-logo_100_100/0?e=1597881600&v=beta&t=OLJ3G-FVKtq8nNIwTDfHoP1XZqJMR4_Au_0ts854_QE',\r\n    },\r\n    {\r\n        type: 'work',\r\n        dates: 'June 2016 - Sept 2016',\r\n        organization: 'Cisco',\r\n        location: 'San Jose, CA',\r\n        position: 'Product Manager Intern',\r\n        description: 'I completed a paid, 10-week product manager internship at Cisco between my first and second year of business school. I worked with Cisco\\'s router team on a project involving virtualizing hardware at branch locations.',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C4D0BAQHO_cO49I_FRA/company-logo_100_100/0?e=1597881600&v=beta&t=SPNoz2QaNXJSmqNus_l4fiou_rGSaTFulQC90DLz_5E',\r\n    },\r\n    {\r\n        type: 'work',\r\n        dates: 'May 2008 - May 2015',\r\n        organization: 'US Navy',\r\n        location: 'Bremerton, WA ▪ Cape Canaveral, FL',\r\n        position: 'Submarine Officer',\r\n        description: 'After a year and a half of nuclear power training, I served for three years as a division officer aboard the USS Maine in Washington state. I rotated to shore duty in 2013, where I was a port operations officer in Cape Canaveral, FL.',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C4E0BAQFWVXDWsH7EzQ/company-logo_100_100/0?e=1597881600&v=beta&t=8EGM_m04VoP97gqssOartpG011hhLDLdR8P8ReWbl3M',\r\n    },\r\n    {\r\n        type: 'education',\r\n        dates: 'June 2004 - May 2008',\r\n        organization: 'US Naval Academy',\r\n        location: 'Annapolis, MD',\r\n        position: 'Student',\r\n        description: 'Earned a bachelors of science, majoring in computer science. For extracurriculars, I was on the varsity offshore sailing team and played guitar in a student rock band that performed at pep rallies and tailgaters.',\r\n        imageUrl: 'https://media-exp1.licdn.com/dms/image/C510BAQEc7soCuF6SvA/company-logo_100_100/0?e=1597881600&v=beta&t=9OAQ_yir-rrgrwQ57r0FmP01v-vCiwfRbmexi0UBVa8',\r\n    },\r\n\r\n]\r\nexport default timelineInfo","// React imports\r\nimport React from 'react'\r\n\r\n// Material UI imports\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Box\r\n} from '@material-ui/core'\r\nimport {\r\n    Work,\r\n    School,\r\n    Star,\r\n} from '@material-ui/icons'\r\n\r\n// A timeline component\r\nimport {\r\n    VerticalTimeline,\r\n    VerticalTimelineElement\r\n} from 'react-vertical-timeline-component'\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\n// Custom imports\r\nimport timelineInfo from '../assets/content/timeline'\r\n\r\nconst styles = {\r\n    work: {\r\n        background: '#115293',\r\n        color: '#fff'\r\n    },\r\n    education: {\r\n        background: '#115293',\r\n        color: '#fff'\r\n    },\r\n    start: {\r\n        background: '#115293',\r\n        color: '#fff'\r\n    },\r\n    companyLogo: {\r\n        maxWidth: 80,\r\n        maxHeight: 80,\r\n        borderRadius: '100%'\r\n    }\r\n}\r\nexport default function Timeline() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h3\" align=\"center\">\r\n                Timeline\r\n            </Typography>\r\n\r\n            {/* Timeline component, from npm */}\r\n            <VerticalTimeline>\r\n                {timelineInfo.map(({ type, dates, organization, location, position, description, imageUrl }) => (\r\n                    <VerticalTimelineElement\r\n                        className={`vertical-timeline-element--${type}`}\r\n                        contentStyle={type === 'work' ? styles.work : styles.education}\r\n                        date={dates}\r\n                        iconStyle={type === 'work' ? styles.work : styles.education}\r\n                        icon={type === 'work' ? <Work /> : <School />}\r\n                        key={dates}\r\n                    >\r\n\r\n                    <Grid container justify=\"space-between\">\r\n                        <Grid item xs={8}>\r\n                            <Typography variant=\"h5\" className=\"vertical-timeline-element-title\" >{organization}</Typography>\r\n                            <Typography variant=\"h6\" className=\"vertical-timeline-element-subtitle\" >{position}</Typography>\r\n                            <Typography variant=\"subtitle1\" className=\"vertical-timeline-element-subtitle\" >{location}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Box align='center'>\r\n                                <img src={imageUrl} alt={`${organization} logo`} style={styles.companyLogo} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"body2\">{description}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    </VerticalTimelineElement>\r\n                ))}\r\n\r\n                <VerticalTimelineElement\r\n                    iconStyle={styles.start}\r\n                    icon={<Star />}\r\n                />\r\n            </VerticalTimeline>\r\n        </React.Fragment>\r\n    )\r\n}","// library imports\r\nimport React from 'react'\r\n\r\n// material ui imports\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    // Button,\r\n    Container,\r\n    // Grid\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n      borderRadius: '3px',\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nexport default function Hero() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.heroContent}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Hi, I'm Shawn.\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Full-Stack Developer ▪ Operations Leader <br />  MBA  ▪  Veteran\r\n                </Typography>\r\n                {/* <div className={classes.heroButtons}>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Main call to action\r\n                        </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Secondary action\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div> */}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n","const emailjs_username = \"user_f0H5XWftXvvGLIre8rF9B\"\r\nexport default emailjs_username","// Library imports\r\nimport React from 'react'\r\nimport emailjs from 'emailjs-com';\r\n\r\n// Material UI imports\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Box,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n// site imports\r\nimport userId from '../assets/config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'rgba(1,1,1,.5)'\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1),\r\n        width: '40ch',\r\n    },\r\n    messageField: {\r\n        \r\n    },\r\n    submitButton: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function ContactForm() {\r\n    // state for the form\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [phone, setPhone] = React.useState('')\r\n    const [company, setCompany] = React.useState('')\r\n    const [message, setMessage] = React.useState('')\r\n\r\n    // for emailjs\r\n    emailjs.init(userId);\r\n    const sendEmail = () => {\r\n        const params = {\r\n            user_name: name,\r\n            user_email: email,\r\n            user_phone: phone,\r\n            user_company: company,\r\n            message,\r\n        }\r\n        emailjs.send('gmail', 'shawnstolsig_com', params, userId)\r\n            .then(() => {\r\n                alert(\"Email sent! I'll get back to you as soon as possible.\")\r\n                setName('')\r\n                setEmail('')\r\n                setPhone('')\r\n                setMessage('')\r\n                setCompany('')\r\n            }, () => {\r\n                alert(\"Error sending message, please try again.\")\r\n            });\r\n    }\r\n\r\n    // get classes \r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" align=\"center\">Contact Me</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box align=\"center\">\r\n                            <TextField\r\n                                label=\"Name\"\r\n                                value={name}\r\n                                helperText=\"Required\"\r\n                                className={classes.textField}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </Box>\r\n                        <Box align=\"center\">\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                value={email}\r\n                                helperText=\"Required\"\r\n                                className={classes.textField}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Box>\r\n                        <Box align=\"center\">\r\n                            <TextField\r\n                                label=\"Phone\"\r\n                                value={phone}\r\n                                className={classes.textField}\r\n                                onChange={(e) => setPhone(e.target.value)}\r\n                            />\r\n                        </Box>\r\n                        <Box align=\"center\">\r\n                            <TextField\r\n                                label=\"Company\"\r\n                                value={company}\r\n                                className={classes.textField}\r\n                                onChange={(e) => setCompany(e.target.value)}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box>\r\n                            <TextField\r\n                                label=\"Message\"\r\n                                value={message}\r\n                                className={classes.messageField}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                multiline\r\n                                rows={15}\r\n                                placeholder=\"Please type a message here...\"\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box align=\"center\">\r\n                            <Button\r\n                                onClick={sendEmail}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submitButton}\r\n                                disabled={!name || !message || !email}\r\n                                >Send\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","// library  imports\r\nimport React from 'react';\r\n\r\n// Material-UI imports\r\nimport {\r\n\tContainer,\r\n\tCssBaseline\r\n} from '@material-ui/core'\r\n\r\n// Site imports\r\nimport Navbar from './Navbar'\r\nimport AboutMe from './AboutMe'\r\nimport ProjectGrid from './ProjectGrid'\r\nimport Timeline from './Timeline'\r\nimport Hero from './Hero'\r\nimport ContactForm from './ContactForm'\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t<Navbar />\r\n\r\n\t\t\t\t<Hero />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<AboutMe />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<ProjectGrid />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Timeline />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<ContactForm />\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport App from './components/App';\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport croppedStarImage from './assets/images/bg_cropped1.9_resized_milkyway.jpg'\r\n\r\n// setting a dark theme by default\r\nconst muiTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    grey: {\r\n      800: \"#000000\", // overrides failed\r\n      900: \"#121212\" // overrides success\r\n    }\r\n  },\r\n  // overriding <body> to add background image\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          '&::after': {\r\n            content: '\"\"',\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            zIndex: -1,\r\n            height: '100vh',\r\n            background: `url(${croppedStarImage}) center center`, // maybe just center center\r\n            WebkitBackgroundSize: 'cover',\r\n            OBackgroundSize: 'cover',\r\n            MozBackgroundSize: 'cover',\r\n            backgroundSize: 'cover',\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={muiTheme}>\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/resume.25b4f8b1.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me.cb728d00.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shiftManagr.68f6bf3b.png\";","module.exports = __webpack_public_path__ + \"static/media/shiftManagr.b3a9aae3.mp4\";","module.exports = __webpack_public_path__ + \"static/media/eftLootTrainer.f2fb2a69.png\";","module.exports = __webpack_public_path__ + \"static/media/eftLootTrainer.4450159a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/chirp.7171df49.png\";","module.exports = __webpack_public_path__ + \"static/media/chirp.0dee8b00.mp4\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.24909f37.png\";","module.exports = __webpack_public_path__ + \"static/media/bg_cropped1.9_resized_milkyway.7ff33ead.jpg\";"],"sourceRoot":""}