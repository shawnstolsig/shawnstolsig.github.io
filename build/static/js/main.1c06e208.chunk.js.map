{"version":3,"sources":["components/Navbar.js","components/ProjectCard.js","components/ProjectGrid.js","data/projects.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","color","Navbar","classes","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","className","Link","href","IconButton","aria-label","GitHub","LinkedIn","root","maxWidth","media","height","ProjectCard","imageUrl","description","Card","CardActionArea","CardMedia","component","image","CardContent","gutterBottom","ProjectGrid","projects","Grid","container","justify","spacing","item","xs","align","map","key","App","Container","muiTheme","createMuiTheme","palette","type","grey","800","900","ReactDOM","render","document","getElementById"],"mappings":"6QAoBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,SAAU,OAKlB,SAASC,EAAgBC,GAAQ,IACrBC,EAAaD,EAAbC,SACFC,EAAUC,YAAiB,CAC7BC,mBAAmB,EACnBC,UAAW,IAIf,OAAOC,IAAMC,aAAaN,EAAU,CAChCO,UAAWN,EAAU,EAAI,EACzBO,MAAOP,EAAU,UAAY,gBAStB,SAASQ,EAAOV,GAC3B,IAAMW,EAAUjB,IAEhB,OACI,kBAAC,IAAMkB,SAAP,KACI,kBAACC,EAAA,EAAD,MACA,kBAACd,EAAoBC,EACjB,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,KACRC,UAAWP,EAAQd,OAFvB,iBAKA,kBAACsB,EAAA,EAAD,CACIC,KAAK,kCACLX,MAAM,WACN,kBAACY,EAAA,EAAD,CACIZ,MAAM,UACNa,aAAW,UACX,kBAACC,EAAA,EAAD,QAGR,kBAACJ,EAAA,EAAD,CACIC,KAAK,4CACLX,MAAM,WACN,kBAACY,EAAA,EAAD,CACIZ,MAAM,UACNa,aAAW,YACX,kBAACE,EAAA,EAAD,WAMpB,kBAACT,EAAA,EAAD,MA/BJ,gB,4CCtCFrB,EAAYC,YAAW,CAC5B8B,KAAM,CACLC,SAAU,KAEXC,MAAO,CACNC,OAAQ,OAIK,SAASC,EAAT,GAAuD,IAAhChC,EAA+B,EAA/BA,MAAOiC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAChDpB,EAAUjB,IAEhB,OACC,kBAACsC,EAAA,EAAD,CAAMd,UAAWP,EAAQc,MACxB,kBAACQ,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CACCC,UAAU,MACVjB,UAAWP,EAAQgB,MACnBS,MAAON,EACPjC,MAAOA,IAER,kBAACwC,EAAA,EAAD,KACC,kBAACrB,EAAA,EAAD,CAAYsB,cAAY,EAACrB,QAAQ,KAAKkB,UAAU,MAC9CtC,GAEF,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,QAAQR,MAAM,gBAAgB0B,UAAU,KAC1DJ,MC7BQ,SAASQ,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SAEjC,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GAGtC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAAK8B,MAAM,UAA/B,aAMHP,EAASQ,KAAI,gBAAEnD,EAAF,EAAEA,MAAOkC,EAAT,EAASA,YAAaD,EAAtB,EAAsBA,SAAtB,OACV,kBAACW,EAAA,EAAD,CAAMQ,IAAKpD,EAAOgD,MAAI,GAClB,kBAAChB,EAAD,CACIhC,MAAOA,EACPkC,YAAaA,EACbD,SAAUA,SC1BlC,IAuBeU,EAvBE,CAChB,CACC3C,MAAO,YACPiC,SAAU,oCACVC,YAAa,mCAEd,CACClC,MAAO,YACPiC,SAAU,sCACVC,YAAa,mCAEd,CACClC,MAAO,aACPiC,SAAU,sCACVC,YAAa,oCAEd,CACClC,MAAO,WACPiC,SAAU,wCACVC,YAAa,sBCTA,SAASmB,IACvB,OACC,kBAACC,EAAA,EAAD,CAAWhB,UAAU,QACpB,kBAACzB,EAAD,MAEA,kBAAC6B,EAAD,CAAaC,SAAUA,K,oBCTpBY,EAAWC,YAAe,CAC9BC,QAAS,CACPC,KAAM,OACNC,KAAM,CACJC,IAAK,UACLC,IAAK,cAMXC,IAASC,OACP,kBAAC,IAAD,CAAkBhE,MAAOwD,GACvB,kBAACF,EAAD,OAEFW,SAASC,eAAe,W","file":"static/js/main.1c06e208.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    CssBaseline,\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    useScrollTrigger,\r\n    Container,\r\n    Box,\r\n    IconButton,\r\n    Link\r\n} from '@material-ui/core'\r\nimport {\r\n    GitHub,\r\n    LinkedIn\r\n} from '@material-ui/icons'\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n// this function adds elevation to the children (in this case an AppBar) when scrolled\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n    });\r\n\r\n    // set higher elevation and a solid background color when scroll triggered\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n        color: trigger ? 'primary' : 'transparent'\r\n    });\r\n}\r\n\r\n// ensure correct props\r\nElevationScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ElevationScroll {...props}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.title}\r\n                        >Shawn Stolsig\r\n                        </Typography>\r\n                        <Link\r\n                            href=\"https://github.com/shawnstolsig\"\r\n                            color=\"inherit\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"GitHub\">\r\n                                <GitHub />\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link\r\n                            href=\"https://www.linkedin.com/in/shawnstolsig/\"\r\n                            color=\"inherit\">\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"LinkedIn\">\r\n                                <LinkedIn />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <Toolbar />            {/* why is this toolbar here? */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tCard,\r\n\tCardActionArea,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tButton,\r\n\tTypography\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmaxWidth: 300,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 300,\r\n\t},\r\n});\r\n\r\nexport default function ProjectCard({ title, imageUrl, description}) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia\r\n\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\timage={imageUrl}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\r\n\t\t\t{/* <CardActions>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\">\r\n\t\t\t\t\tShare\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\">\r\n\t\t\t\t\tLearn More\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions> */}\r\n\t\t</Card>\r\n\t);\r\n}","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport ProjectCard from './ProjectCard'\r\n\r\n\r\nexport default function ProjectGrid({projects}) {\r\n\r\n    return (\r\n        <Grid container justify=\"center\" spacing={2}>\r\n\r\n            {/* Page title */}\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h3\" align=\"center\">\r\n                    The Cage\r\n                </Typography>\r\n            </Grid>\r\n\r\n            {/* Project cards */}\r\n            {projects.map(({title, description, imageUrl}) => (\r\n                <Grid key={title} item>\r\n                    <ProjectCard \r\n                        title={title}\r\n                        description={description}\r\n                        imageUrl={imageUrl}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n            \r\n        </Grid>\r\n    );\r\n}\r\n","// data for project cards\r\nconst projects = [\r\n\t{\r\n\t\ttitle: \"Calm Cage\",\r\n\t\timageUrl: \"https://www.placecage.com/300/300\",\r\n\t\tdescription: \"This is a picture of Calm Cage.\"\r\n\t},\r\n\t{\r\n\t\ttitle: \"Gray Cage\",\r\n\t\timageUrl: \"https://www.placecage.com/g/300/300\",\r\n\t\tdescription: \"This is a picture of Gray Cage.\"\r\n\t},\r\n\t{\r\n\t\ttitle: \"Crazy Cage\",\r\n\t\timageUrl: \"https://www.placecage.com/c/300/300\",\r\n\t\tdescription: \"This is a picture of Crazy Cage.\"\r\n\t},\r\n\t{\r\n\t\ttitle: \"Gif Cage\",\r\n\t\timageUrl: \"https://www.placecage.com/gif/300/300\",\r\n\t\tdescription: \"Cage on the move!\"\r\n\t},\r\n]\r\n\r\nexport default projects","import React from 'react';\nimport {\n\tContainer,\n} from '@material-ui/core'\n\nimport Navbar from './Navbar'\nimport ProjectGrid from './ProjectGrid'\nimport projects from '../data/projects'\n\n\n\nexport default function App() {\n\treturn (\n\t\t<Container component=\"main\">\n\t\t\t<Navbar />\n\n\t\t\t<ProjectGrid projects={projects} />\n\t\t</Container>\n\t);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// setting a dark theme by default\nconst muiTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    grey: {\n      800: \"#000000\", // overrides failed\n      900: \"#121212\" // overrides success\n    }\n  }\n});\n\n\nReactDOM.render(\n  <MuiThemeProvider theme={muiTheme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}